ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
####################
# Read in the Data #
####################
filelist = list.files('ModelBuilder/Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('ModelBuilder/Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .) %>%
sample_n(2500)
head(data)
runApp('ModelBuilder')
data$Year = as.numeric(data$Year)
runApp('ModelBuilder')
runGitHub( "ModelBuilder1.0", "mchernos", subdir = 'ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
filelist
filename = filelist[1]
temp = read.csv(paste0('ModelBuilder/Data/',filename)) %>%
if(colnames(temp)[1] == 'name'){gather(Year,Value, -name)
}else {gather(Year, Value, -row, -col)}
colnames(temp)
temp = read.csv(paste0('ModelBuilder/Data/',filename))
colnames(temp)
temp = temp %>%
if(colnames(temp)[1] == 'name'){gather(Year,Value, -name)
}else {gather(Year, Value, -row, -col)}
colnames(temp)[1]
temp = read.csv(paste0('ModelBuilder/Data/',filename))
temp = gather(temp, Year,Value, -name)
?gather
gather(temp, Year, Value, -name)
temp = temp %>%
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year,Value, -name)
}else {gather(Year, Value, -row, -col)}
colnames(temp)[1] == 'name'
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year,Value, -name)
}else {
temp = gather(Year, Value, -row, -col)}
temp = gather(Year, Value, -row, -col)
temp = gather(temp, Year, Value, -row, -col)}
temp = gather(temp, Year, Value, -row, -col)
temp = read.csv(paste0('ModelBuilder/Data/',filename))
temp = temp %>%
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year,Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
head(temp)
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
head(temp)
data_structure = (colnames(temp)[1] == 'name')
data_structure
rm(temp)
temp
regionalized = (colnames(temp)[1] == 'name')
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
# Need to use as template for reading in all the rest of 'em
regionalized = (colnames(temp)[1] == 'name')
non_data_cols = ifelse(regionalized, c('name', 'Year'), c('row', 'col', 'Year'))
non_data_cols
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
non_data_cols =
?
s
non_data_cols =
dsjh
non_data_cols
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
regionalized = (colnames(temp)[1] == 'name')
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
non_data_cols
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
!regionalized
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Alces Correlations to Riparian Health
# Clean up workspace
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo', 'mgcv')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
############ LOAD FUNCTIONS ###################
source('ModelBuilder/denscomp1.R') # Density histogram plot for interactive breaks
source('ModelBuilder/fitfuncs.R') # Fit Functions
# Alces Correlations to Riparian Health
# Clean up workspace
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo', 'mgcv')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
############ LOAD FUNCTIONS ###################
source('ModelBuilder/denscomp1.R') # Density histogram plot for interactive breaks
source('ModelBuilder/fitfuncs.R') # Fit Functions
filelist = list.files('ModelBuilder/Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
# Need to use as template for reading in all the rest of 'em
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
regionalized = (colnames(temp)[1] == 'name')
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
# Read in and merge all datasets, Conditional on if data are regionalized
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = non_data_cols), .)
non_data_cols
temp = read.data(filelist[1])
filename = filelist[1]
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
head(temp)
temp$Year = gsub('X','',temp$Year)
dim(temp)
length(temp)
colnames(temp)[length(temp)] = gsub('.csv', '',filename)
temp
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo', 'mgcv')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
############ LOAD FUNCTIONS ###################
source('ModelBuilder/denscomp1.R') # Density histogram plot for interactive breaks
source('ModelBuilder/fitfuncs.R') # Fit Functions
####################
# Read in the Data #
####################
filelist = list.files('ModelBuilder/Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[length(temp)] = gsub('.csv', '',filename)
temp
}
# Need to use as template for reading in all the rest of 'em
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
regionalized = (colnames(temp)[1] == 'name')
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
# Read in and merge all datasets, Conditional on if data are regionalized
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = non_data_cols), .)
if(!regionalized){ data = data %>% sample_n(2500) }
data$Year = as.numeric(data$Year)
rm(temp)
head(data)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
regionalized
colnames(data)[ifelse(regionalized, -1:-2, -1:-3)]
colnames(data)
ifelse(regionalized, -1:-2, -1:-3)
ifelse(regionalized, c(-1:-2), c(-1:-3))
ifelse(regionalized, c(-1,-2), c(-1,-3))
ifelse(regionalized, list = c(-1,-2), list = c(-1,-3))
ifelse(regionalized, list = c(-1,-2), list(-1,-3))
ifelse(regionalized, list(-1,-2), list(-1,-3))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
regionalized
head(data)
class(data[,3])
class(data[,4])
class(data[,5])
class(data[,2])
class(data[,1])
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
head(data)
data %>%
gather(Stat, Value, -name, -Year) %>%
group_by(Year, Stat)
if (input$Aggregate != 'None'){
if(regionalized){
data = data %>%
gather(Stat, Value, -name, -Year) %>%
group_by(Year, Stat)
}else {
data = data %>%
gather(Stat, Value,  -row, -col, -Year) %>%
group_by(Year, Stat)
}
head(data)
}
head(data)
if(regionalized){
data = data %>%
gather(Stat, Value, -name, -Year) %>%
group_by(Year, Stat)
}else {
data = data %>%
gather(Stat, Value,  -row, -col, -Year) %>%
group_by(Year, Stat)
}
head(data)
data %>% filter(Year %in% 1900:1910)
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
head(data)
head(data.frame(data))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Alces Correlations to Riparian Health
# Clean up workspace
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo', 'mgcv')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
############ LOAD FUNCTIONS ###################
source('ModelBuilder/denscomp1.R') # Density histogram plot for interactive breaks
source('ModelBuilder/fitfuncs.R') # Fit Functions
####################
# Read in the Data #
####################
filelist = list.files('ModelBuilder/Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[length(temp)] = gsub('.csv', '',filename)
temp
}
# Need to use as template for reading in all the rest of 'em
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
regionalized = (colnames(temp)[1] == 'name')
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
# Read in and merge all datasets, Conditional on if data are regionalized
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = non_data_cols), .)
if(!regionalized){ data = data %>% sample_n(2500) }
data$Year = as.numeric(data$Year)
rm(temp)
# END HELPER #
head(data)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
colnames(data)[-1:-2]
colnames(data)[-1:-3]
?selectInput
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
non_data_cols
names(data)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Alces Correlations to Riparian Health
# Clean up workspace
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo', 'mgcv')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
############ LOAD FUNCTIONS ###################
source('ModelBuilder/denscomp1.R') # Density histogram plot for interactive breaks
source('ModelBuilder/fitfuncs.R') # Fit Functions
####################
# Read in the Data #
####################
filelist = list.files('ModelBuilder/Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('ModelBuilder/Data/',filename))
if(colnames(temp)[1] == 'name'){
temp = gather(temp, Year, Value, -name)
}else {
temp = gather(temp, Year, Value, -row, -col)
}
temp$Year = gsub('X','',temp$Year)
colnames(temp)[length(temp)] = gsub('.csv', '',filename)
temp
}
# Need to use as template for reading in all the rest of 'em
temp = read.csv(paste0('ModelBuilder/Data/',filelist[1]))
regionalized = (colnames(temp)[1] == 'name')
if(regionalized){   non_data_cols = c('name', 'Year')
}else {           non_data_cols = c('row', 'col', 'Year') }
# Read in and merge all datasets, Conditional on if data are regionalized
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = non_data_cols), .)
if(!regionalized){ data = data %>% sample_n(2500) }
data$Year = as.numeric(data$Year)
rm(temp)
# END HELPER #
head(data)
tail(data)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
regionalized
data = data.frame(data)
head(data)
colnames(data) = gsub('\\.',' ', colnames(data))
head(data)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
regionalized
shiny::runApp('ModelBuilder')
?renderUI
if(regionalized){
}
regionalized
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
unique(data$name)
unique(data$name)
c('All', unique(data$name)
c('All', unique(data$name))
c('All', unique(data$name))
c('All', as.character(unique(data$name)))
shiny::runApp('ModelBuilder')
head(data)
regionalized
data = data %>%
gather(Stat, Value, -name, -Year) %>%
group_by(Year, Stat)
head(data)
data %>%
summarise(Value = median(Value, na.rm = T)) %>%
spread(key = Stat, value = Value)
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
data %>%
ggplot(aes(x = name, y = Dummy)) +
geom_boxplot()
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
regionalized
p = ggplot(data, aes(x = name, y = Dummy))
p + geom_point()
p = ggplot(data, aes(x = name, y = Dummy))
if(regionalized) {p + geom_boxplot()}
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
get('x')
shiny::runApp('ModelBuilder')
sites = unique(data$name)
sites
xdat = filter(name %in% sites[1:3])
xdat = filter(data, name %in% sites[1:3])
head(xdat)
t.test()
?t.test
tapply()
?tapply
tapply(xdat$Dummy, xdat$name, t.test)
?anova
tapply(xdat$Dummy, xdat$name, t.test)
aov(name~Dummy, data = xdat)
fit <- aov(Dummy ~ name, data=mydataframe)
fit <- aov(Dummy ~ name, data=xdat)
fit
?TukeyHSD
TukeyHSD(fit)
summary(fit)
shiny::runApp('ModelBuilder')
shiny::runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
