gather(Year, Value, -row, -col) %>%
head(5)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
read.data(filelist[1])
# Alces Correlations to Riparian Health
rm(list = ls())
library('shiny')
library('dplyr')
library('tidyr')
library('corrplot')                     # package corrplot
library('MASS')
# Fit Plot FUNCTION
fit.plot = function(x){
par(mfrow = c(1,2))
# Plot Predicted Model against Observed Values
plot(data$`Riparian Health`, x$fitted.values, pch = 19,
xlab = 'Observed Riparian Health', ylab = 'Predicted Riparian Health',
main = '')
abline(0,1, col = 'grey60')
# Plot Residuals
plot(x$residuals, pch = 19, ylab = 'Residuals')
abline(h = 0, lwd = 2, lty = 2, col = 'grey60')
}
####################
# Read in the Data #
####################
filelist = list.files('Data', pattern = '*.csv')
filenames = gsub('.csv', '', list.files('Data', pattern = '*.csv'))
# if(length(filelist) < 2){	data <- read.csv(filelist)} else 	{
#   data <- do.call("rbind", lapply(filelist, function(x) read.csv(x)) )	}
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col) %>%
head(10)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
filelist
x = lapply(filelist, function(x) read.data(x))
head(x)
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .)
head(data)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
cor_matrix = cor(data)             # get correlations
cor_matrix = cor(data[,-c('row', 'col', 'Year')])             # get correlations
head(data)
head(data[,-1:-3])
head(data[,-c('row')])
head(data[,-'row'])
head(data[,c(-'row')])
head(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
cor_matrix = cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])# get correlations
head(data[,!(colnames(data) %in% c('row', 'col', 'Year')))
head(data[,!(colnames(data) %in% c('row', 'col', 'Year')))]
head(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
tail(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
cor_matrix = cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])# get correlations
corrplot(cor_matrix, method = "ellipse", order = 'AOE') # plot matrix
filelist = list.files('Data', pattern = '*.csv')
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
# Read in and merge all datasets
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .)
cor_matrix = cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])# get correlations
corrplot(cor_matrix, method = "ellipse", order = 'AOE') # plot matrix
fit <- lm(dummy~.,data=data[,-c('row','col','Year')])
fit <- lm(dummy~.,data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
step <- stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
summary(step)
fit.plot(step)
head(data)
fit <- lm(fish_habitat~.,data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
step <- stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
# step$anova          # display results
summary(step)
fit.plot(step)
head(step)
step
# Fit Plot FUNCTION
fit.plot = function(x){
par(mfrow = c(1,2))
# Plot Predicted Model against Observed Values
plot(data$fish_habitat, x$fitted.values, pch = 19,
xlab = 'Observed', ylab = 'Predicted',
main = '')
abline(0,1, col = 'grey60')
# Plot Residuals
plot(x$residuals, pch = 19, ylab = 'Residuals')
abline(h = 0, lwd = 2, lty = 2, col = 'grey60')
}
fit.plot(step)
summary(step)
fit.plot(step)
x = 1:10
y = 1:10
sample(x,2)
sample(x,2)
sample(y,2)
set.seed(1)
sample(y,2)
sample(y,2)
sample(y,2)
sample(x,2)
data = sample(data, 1000)
dim(data)
data = data[sample(nrow(data), 1000), ]
cor_matrix = cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])# get correlations
corrplot(cor_matrix, method = "ellipse", order = 'AOE') # plot matrix
cor_matrix = cor(data[,!(colnames(data) %in% c('row', 'col', 'Year'))])# get correlations
corrplot(cor_matrix, method = "ellipse", order = 'AOE') # plot matrix
fit <- lm(fish_habitat~.,data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
step <- stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
# step$anova          # display results
summary(step)
fit.plot(step)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Alces Correlations to Riparian Health
rm(list = ls())
library('shiny')
library('dplyr')
library('tidyr')
library('corrplot')                     # package corrplot
library('MASS')
# Fit Plot FUNCTION
fit.plot = function(x){
par(mfrow = c(1,2))
# Plot Predicted Model against Observed Values
plot(data$fish_habitat, x$fitted.values, pch = 19,
xlab = 'Observed', ylab = 'Predicted',
main = '')
abline(0,1, col = 'grey60')
# Plot Residuals
plot(x$residuals, pch = 19, ylab = 'Residuals')
abline(h = 0, lwd = 2, lty = 2, col = 'grey60')
}
####################
# Read in the Data #
####################
filelist = list.files('Data', pattern = '*.csv')
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
# Read in and merge all datasets
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .)
data = data[sample(nrow(data), 1000), ]
colnames(data)[-1:-4]
colnames(data)[-1:-3]
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
write.csv(data, 'data.csv')
write.csv(data, 'data.csv', row.names = F)
data = read.csv('Data/data.csv')
head(data)
fit <- lm(dummy~. , data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
fit
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
dim(data)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
hea(data)
head(data)
tail(data)
fit = lm(dummy~.data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
fit = lm(dummy~. , data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
fit
plot(fit)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
fit
fit <- lm(data[,'dummy']~. , data=data[,!(colnames(data) %in% c('row', 'col', 'Year'))])
fit
stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
fit <- lm(data[,'dummy']~. ,
data=data[,!(colnames(data) %in% c('row', 'col', 'Year') ) ]   )
fi
fit
step = stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
fit.plot(step)
fit <- lm(data[,'fish_habitat']~. ,
data=data[,!(colnames(data) %in% c('row', 'col', 'Year') ) ]   )
fit
fit.plot(step)
step = stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
fit.plot(step)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
fit = lm(fish_habitat~. data = data)
fit = lm(fish_habitat~. , data = data)
fit
step = stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
step = stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
step
fit.plot(data$fish_habitat, step)
summary(step)
source('~/Dropbox/Hydrology Consulting Work/Alces Correlations/ModelBuilder1.0/RunModelBuilder.R', echo=TRUE)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
fit = lm(fish_habitat~. , data = data)
step = stepAIC(fit, scope = list(upper = fit, lower = ~1), direction="both", steps = 1000)
summary(step)
class(step)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
min(data$Year)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
?sliderInput
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
head(filter(data, Year %in% 1999:2001))
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
plot(data$Year, data$"dummy")
boxplot(data$"dummy")
boxplot(data$"dummy", data$"sunspot.year")
boxplot(data$"dummy", data$Year)
plot(data$Year, data$"dummy")
fit2 = lm(dummy~Year, data = data)
fit2
summary(fit2)
plot(fit2)
library('MannKendall')
library('Kendall')
summary(fit2)
MannKendall(ffit.plot())
MannKendall(fit2
)
MannKendall(1:10)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(dtaa)
head(data)
hist(data$"road_density")
hist(data$"road_density",breaks = 5)
?image
image(x = row, y = col, z = road_density, data = data)
image(x = data$row, y = data$col, z = data$road_density)
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
plot(col~row, data =data)
filelist = list.files('Data', pattern = '*.csv')
filelist
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .)
head(data)
plot(col~row, data =data)
dim(data)
image(y = data$col, x = data$row,x = data$fish_habitat )
image(y = data$col, x = data$row,z = data$fish_habitat )
library('ggplot2')
ggplot(aes(x = row, y = col, colour = fish_habitat), data = data)
ggplot(aes(x = row, y = col, colour = fish_habitat), data = data) + geom_point()
?fitdistr
fitdistr(data$"fish_habitat", 'normal')
# Alces Correlations to Riparian Health
rm(list = ls())
library('shiny')
library('dplyr')
library('tidyr')
library('corrplot')                     # package corrplot
library('MASS')
library('Kendall')
# Fit Plot FUNCTION
fit.plot = function(predictand, x){
par(mfrow = c(1,2))
# Plot Predicted Model against Observed Values
plot(predictand, x$fitted.values, pch = 19,  # NEED TO FIX
xlab = 'Observed', ylab = 'Predicted',
col = rgb(0,0,0,0.6),
main = '')
abline(0,1, col = 'red', lwd = 2)
# Plot Residuals
plot(x$residuals, pch = 19, ylab = 'Residuals', col = rgb(0,0,0,0.6))
abline(h = 0, lwd = 2, lty = 2, col = 'red')
}
####################
# Read in the Data #
####################
filelist = list.files('Data', pattern = '*.csv')
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
# Read in and merge all datasets
# data = lapply(filelist, function(x) read.data(x)) %>%
#   Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .)
# data$Year = as.numeric(data$Year)
# Y = F
#
# data = data %>%
#   filter(Year %in% 1900:1930)
# if (Y){
# data = data %>%
#   gather(Stat, Value,  -row, -col, -Year) %>%
#   group_by(Year, Stat) %>%
#   summarise(Value = mean(Value)) %>%
#   spread(key = Stat, value =Value)
# }
#
#
# X %>%
#   add(1) %>%
#   {if(Y) add(1) else .}
# data = data[sample(nrow(data), 1000), ]
# TEMP DATA
data = read.csv('Data/data.csv')
# ggplot(aes(x = row, y = col, colour = fish_habitat), data = data) + geom_point()
data = read.csv('Data/data.csv')
data = read.csv('Data/data.csv')
head(data)
class(data$Year)
order(unique(data$Year))
head(as.numeric(data$Year))
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
head(data)
data = data %>%
gather(Stat, Value,  -row, -col, -Year) %>%
group_by(Year, Stat) %>%
summarise(Value = mean(Value)) %>%
spread(key = Stat, value =Value)
data
lm(data[,'dummy']~., data = data[,!(colnames(data) %in% c('row', 'col', 'year', 'dummy') )])
lm(data[,'dummy']~., data = data[,!(colnames(data) %in% c('year', 'dummy') )])
head(data)
lm(data[,'dummy']~.)
head(data[,])
head(data[,'dummy'])
data = data.frame(data)
head(data)
lm(data[,'dummy']~., data = data[,!(colnames(data) %in% c('year', 'dummy') )])
# Run ALCES ModelBuilder
library('shiny')
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
