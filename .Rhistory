# Clean up workspace
rm(list = ls())
# Check for installed packages (install if need be)
packages = c('shiny', 'dplyr', 'tidyr','corrplot', 'DT',
'MASS', 'ggplot2', 'Kendall', 'fitdistrplus',
'e1071', 'relaimpo')
x = lapply(packages, function(x){if (!require(x, character.only = T)) install.packages(x)})
x = lapply(packages, require, character.only = T)
rm(x, packages)
# Fit Plot Function
fit.plot = function(predictand, x){
# Plot Predicted Model against Observed Values
plot(na.omit(predictand), x$fitted.values, pch = 19,
xlab = 'Observed', ylab = 'Predicted',
col = rgb(0,0,0,0.6),
main = '')
mtext('Predicted vs. Observed', 3)
abline(0,1, col = 'red', lwd = 2)
# Plot Residuals
plot(x$residuals, pch = 19, ylab = 'Residuals',
col = rgb(0,0,0,0.6),
main = '')
mtext('Indexed Residuals', 3)
abline(h = 0, lwd = 2, lty = 2, col = 'red')
}
# Mode Function
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
####################
# Read in the Data #
####################
filelist = list.files('Data', pattern = '*.csv')
# Function to read in the Data
read.data = function(filename){
temp = read.csv(paste0('Data/',filename)) %>%
gather(Year, Value, -row, -col)
temp$Year = gsub('X','',temp$Year)
colnames(temp)[4] = gsub('.csv', '',filename)
temp
}
# Read in and merge all datasets
data = lapply(filelist, function(x) read.data(x)) %>%
Reduce(function(x,y) full_join(x,y, by = c('row', 'col', 'Year')), .) %>%
sample_n(1000)
# data = data[sample(nrow(data), 1000), ]
# TEMP DATA
# data = read.csv('Data/data2.csv')
# ggplot(aes(x = row, y = col, colour = fish_habitat), data = data) + geom_point()
data$Year = as.numeric(data$Year)
data
head(data)
data = data %>%
gather(Stat, Value,  -row, -col, -Year) %>%
group_by(Year, Stat)
data
data %>%
summarise(Value = mean(Value)) %>%
spread(key = Stat, value =Value)
data = data %>%
summarise(Value = mean(Value)) %>%
spread(key = Stat, value =Value)
data
lapply(data, unlist)
lapply(data, function(x)data.frame(unlist))
data.frame(data)
head(data)
data =data.frame(data)
data
colnames(data)
gsub('//.',' ', colnames(data))
gsub('\\.',' ', colnames(data))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
?lm
?stat_smooth
?gam
summary(lm(data[,'Fish Habitat']~data[,'Road Density']))
lm(data[,'Fish Habitat']~data[,'Road Density'])
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
loess()
lm(data[,'Fish Habitat']~data[,'Road Density'])
loess(data[,'Fish Habitat']~data[,'Road Density'])
summary(data[,'Fish Habitat']~data[,'Road Density'])
summary(loess(data[,'Fish Habitat']~data[,'Road Density']))
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) + geom_point()
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point()
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth()
data[,'Fish Habitat']~data[,'Road Density']
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'])
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(lo.fit)
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'])
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(lo.fit)
lo.fit
predict(lo.fit)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)))
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 0.5)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 0.25)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 0.2)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth() + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 0.2)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 0.2) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 0.52) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
?stat_smooth
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 2)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 2) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 2, fullrange = T) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 2)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 2, fullrange = T) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 1)
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) + geom_point() +
stat_smooth(span = 2, fullrange = T) + geom_smooth(aes(x = `Road Density`, y = predict(lo.fit)), col= 'red')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
lo.fit = loess(data[,'Fish Habitat']~data[,'Road Density'], span = 1)
lo.fit
summary(lo.fit)
summary(loess(data[,'Fish Habitat']~data[,'Road Density'], span = 1))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
gam
?gam
gam(data[,'Fish Habitat']~data[,'Road Density'])
library(mgcv)
gam(data[,'Fish Habitat']~data[,'Road Density'])
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'ocat')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'tw')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'nb')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'betar')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'scat')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'ziP')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'ziP')
gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'tw')
summary(gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'tw'))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
summary(gam(data[,'Fish Habitat']~data[,'Road Density'], family = 'tw'))
summary(gam(data[,'Fish Habitat']~data[,'Random Normal'], family = 'tw'))
summary(gam(data[,'Fish Habitat']~data[,2], family = 'tw'))
summary(gam(data[,'Fish Habitat']~data[,2] + data[,3], family = 'tw'))
?glm
summary(glm(data[,'Fish Habitat']~data[,2] + data[,3], family = 'tw'))
summary(glm(data[,'Fish Habitat']~data[,2], family = 'tw'))
summary(glm(data[,'Fish Habitat']~data[,1], family = 'tw'))
summary(glm(data[,'Fish Habitat']~data[,5], family = 'tw'))
?rlm
summary(rlm(data[,'Fish Habitat']~data[,5], family = 'tw'))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
foo = rnorm(21)
x <- 1:21
gam(foo~s(x), family=gaussian(link = "logit"))
foo = 1:21
x <- 1:21
gam(foo~s(x), family=gaussian(link = "logit"))
foo = data$row[1:21]
x <- 1:21
gam(foo~s(x), family=gaussian(link = "logit"))
foo = data$`Fish Habitat`[1:21]
x <- 1:21
gam(foo~s(x), family=gaussian(link = "logit"))
?s
gam(foo~x)
summary(gam(data[,'Fish Habitat']~data[,2] + data[,3], family = 'tw'))
summary(gam(data[,'Fish Habitat']~data[,2], family = 'tw'))
summary(gam(data[,'Fish Habitat']~s(data[,2]), family = 'tw'))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
data %>%
ggplot(aes(x = row, y = col)) +
geom_point()
qr
x = 'log'
data %>%
ggplot(aes(x = row, y = col)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'qr', span = 0.3,
formula = if(x == 'log'){y~log(x)}else{y~x})
data %>%
ggplot(aes(x = row, y = col)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(formula = if(x == 'log'){y~log(x)}else{y~x})
data %>%
ggplot(aes(x = row, y = col)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = if(x == 'log'){y~log(x)}else{y~x})
data %>%
ggplot(aes(x = row, y = col)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'qr', formula = if(x == 'log'){y~log(x)}else{y~x})
data %>%
ggplot(aes(x = row, y = col)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = y~exp(x))
data %>%
ggplot(aes(x = row, y = Year)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = y~exp(x))
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = y~exp(x))
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = y~exp(x)) +
stat_smooth(method = 'lm', formula = y~log(x), col = 'red')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
summary(lm(LiveData()[,input$predictand]~log10(LiveData()[,input$x_variable])
)
))
)()
summary(lm(data[,'Fish Habitat']~data[,'Road Density']))
summary(lm(data[,'Fish Habitat']~exp(data[,'Road Density'])))
summary(lm(data[,'Fish Habitat']~log10(data[,'Road Density'])))
log10(data[,'Road Density'])
data[,'Road Density']
summary(lm(data[,'Fish Habitat']~exp(data[,'Road Density'])))
?lm
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula = y~exp(x)) +
stat_smooth(method = 'lm', formula = y~log(x), col = 'red')
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
z = 'log'
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x}))
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
z =
s
z
z
z = 'log'
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
z = 'exp'
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth( formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
data %>%
ggplot(aes(x = `Fish Habitat`, y = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
z = 'log'
data %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
data %>%
filter(`Fish Habitat` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'gam')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'gam', family = 'tw')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'glm', family = 'tw')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'glm', family = 'binomial')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +
stat_smooth(method = 'glm', family = 'binomial')
+   stat_smooth(method="glm", family="binomial")
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="glm", family="binomial")
stat_smooth(method = 'lm', formula =
theme_bw() +   stat_smooth(method="glm", family="binomial")
stat_smooth(method = 'lm', formula =
if(z == 'log'){y~log10(x)}
else if(z == 'exp'){y~exp(x)}
else{y~x})
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", family="binomial")
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", family=binomial )
?stat_smooth
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", method.args = list(family=binomial ))
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", method.args = list(family=tw ))
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", method.args = list(family='tw' ))
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", method.args = list(family='binomial' ))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="gam", method.args = list(NULL ))
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="lm", method.args = list(NULL ))
data %>%
filter(`Road Density` > 0) %>%
ggplot(aes(y = `Fish Habitat`, x = `Road Density`)) +
geom_point() +
# labs(y = input$predictand, x = input$x_variable) +
theme_bw() +   stat_smooth(method="loess", method.args = list(NULL ))
# Run ALCES ModelBuilder
source('ModelBuilder/helper.R')
runApp('ModelBuilder')
